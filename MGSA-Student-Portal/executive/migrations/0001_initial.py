# Generated by Django 3.2.20 on 2025-10-23 22:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Executive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('executive_title', models.CharField(choices=[('president', 'President'), ('vice_president', 'Vice President'), ('secretary', 'Secretary'), ('treasurer', 'Treasurer'), ('academic_head', 'Academic Head'), ('events_coordinator', 'Events Coordinator'), ('public_relations', 'Public Relations Officer'), ('it_coordinator', 'IT Coordinator'), ('department_representative', 'Department Representative'), ('general_member', 'General Member')], max_length=50)),
                ('department', models.CharField(blank=True, choices=[('computer_science', 'Computer Science'), ('business', 'Business Administration'), ('engineering', 'Engineering'), ('medicine', 'Medicine'), ('law', 'Law'), ('arts', 'Arts and Humanities'), ('science', 'Natural Sciences'), ('social_sciences', 'Social Sciences'), ('education', 'Education')], max_length=50)),
                ('committee', models.CharField(choices=[('executive_committee', 'Executive Committee'), ('academic_committee', 'Academic Committee'), ('events_committee', 'Events Committee'), ('finance_committee', 'Finance Committee'), ('publicity_committee', 'Publicity Committee'), ('welfare_committee', 'Welfare Committee'), ('sports_committee', 'Sports Committee'), ('cultural_committee', 'Cultural Committee')], max_length=50)),
                ('term_start_date', models.DateField()),
                ('term_end_date', models.DateField()),
                ('is_current', models.BooleanField(default=True)),
                ('office_phone', models.CharField(blank=True, max_length=15)),
                ('office_location', models.CharField(blank=True, max_length=100)),
                ('office_hours', models.JSONField(blank=True, default=list, help_text='Office hours in JSON format')),
                ('bio', models.TextField(blank=True, help_text='Executive role biography')),
                ('responsibilities', models.JSONField(blank=True, default=list, help_text='List of responsibilities')),
                ('goals', models.JSONField(blank=True, default=list, help_text='Goals for the term')),
                ('performance_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('tasks_completed', models.PositiveIntegerField(default=0)),
                ('tasks_pending', models.PositiveIntegerField(default=0)),
                ('can_approve_posts', models.BooleanField(default=False)),
                ('can_approve_resources', models.BooleanField(default=False)),
                ('can_manage_tutorials', models.BooleanField(default=False)),
                ('can_view_analytics', models.BooleanField(default=False)),
                ('can_manage_users', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='executive', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_executives', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Executive',
                'verbose_name_plural': 'Executives',
                'ordering': ['executive_title', 'user__first_name', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='ExecutiveMeeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('meeting_type', models.CharField(choices=[('general', 'General Meeting'), ('executive', 'Executive Meeting'), ('committee', 'Committee Meeting'), ('emergency', 'Emergency Meeting'), ('planning', 'Planning Meeting')], default='general', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('meeting_date', models.DateTimeField()),
                ('duration_minutes', models.PositiveIntegerField(default=60)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('virtual_link', models.URLField(blank=True)),
                ('agenda', models.JSONField(blank=True, default=list)),
                ('minutes', models.TextField(blank=True)),
                ('decisions_made', models.JSONField(blank=True, default=list)),
                ('action_items', models.JSONField(blank=True, default=list)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Executive Meeting',
                'verbose_name_plural': 'Executive Meetings',
                'ordering': ['-meeting_date'],
            },
        ),
        migrations.CreateModel(
            name='MeetingAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rsvp_status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('declined', 'Declined')], default='pending', max_length=10)),
                ('attended', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('executive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='executive.executive')),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='executive.executivemeeting')),
            ],
            options={
                'verbose_name': 'Meeting Attendance',
                'verbose_name_plural': 'Meeting Attendances',
                'unique_together': {('executive', 'meeting')},
            },
        ),
        migrations.CreateModel(
            name='ExecutiveTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('on_hold', 'On Hold')], default='pending', max_length=15)),
                ('assigned_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateTimeField()),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_hours', models.PositiveIntegerField(default=1)),
                ('actual_hours', models.PositiveIntegerField(blank=True, null=True)),
                ('progress_percentage', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='executive_tasks/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('executive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='executive.executive')),
            ],
            options={
                'verbose_name': 'Executive Task',
                'verbose_name_plural': 'Executive Tasks',
                'ordering': ['-due_date', 'priority'],
            },
        ),
        migrations.CreateModel(
            name='ExecutiveReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('weekly', 'Weekly Report'), ('monthly', 'Monthly Report'), ('quarterly', 'Quarterly Report'), ('annual', 'Annual Report'), ('special', 'Special Report')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('accomplishments', models.JSONField(blank=True, default=list)),
                ('challenges', models.JSONField(blank=True, default=list)),
                ('lessons_learned', models.JSONField(blank=True, default=list)),
                ('recommendations', models.JSONField(blank=True, default=list)),
                ('next_steps', models.JSONField(blank=True, default=list)),
                ('tasks_completed', models.PositiveIntegerField(default=0)),
                ('tasks_pending', models.PositiveIntegerField(default=0)),
                ('meetings_attended', models.PositiveIntegerField(default=0)),
                ('initiatives_launched', models.PositiveIntegerField(default=0)),
                ('is_submitted', models.BooleanField(default=False)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('report_file', models.FileField(blank=True, null=True, upload_to='executive_reports/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_reports', to=settings.AUTH_USER_MODEL)),
                ('executive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='executive.executive')),
            ],
            options={
                'verbose_name': 'Executive Report',
                'verbose_name_plural': 'Executive Reports',
                'ordering': ['-period_end', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='executivemeeting',
            name='attendees',
            field=models.ManyToManyField(related_name='meetings_attended', through='executive.MeetingAttendance', to='executive.Executive'),
        ),
        migrations.AddField(
            model_name='executivemeeting',
            name='organized_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_meetings', to='executive.executive'),
        ),
        migrations.AddIndex(
            model_name='executive',
            index=models.Index(fields=['executive_title'], name='executive_e_executi_106b08_idx'),
        ),
        migrations.AddIndex(
            model_name='executive',
            index=models.Index(fields=['department'], name='executive_e_departm_33f7c1_idx'),
        ),
        migrations.AddIndex(
            model_name='executive',
            index=models.Index(fields=['committee'], name='executive_e_committ_500303_idx'),
        ),
        migrations.AddIndex(
            model_name='executive',
            index=models.Index(fields=['is_current'], name='executive_e_is_curr_14223d_idx'),
        ),
        migrations.AddIndex(
            model_name='executive',
            index=models.Index(fields=['is_active'], name='executive_e_is_acti_9b0616_idx'),
        ),
    ]
